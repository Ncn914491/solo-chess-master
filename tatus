[1mdiff --git a/README.md b/README.md[m
[1mindex 733b4d2..4483639 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1,73 +1,84 @@[m
[31m-# Welcome to your Lovable project[m
[31m-[m
[31m-## Project info[m
[31m-[m
[31m-**URL**: https://lovable.dev/projects/fd9f3424-0298-4930-96d6-270664224ee0[m
[31m-[m
[31m-## How can I edit this code?[m
[31m-[m
[31m-There are several ways of editing your application.[m
[31m-[m
[31m-**Use Lovable**[m
[31m-[m
[31m-Simply visit the [Lovable Project](https://lovable.dev/projects/fd9f3424-0298-4930-96d6-270664224ee0) and start prompting.[m
[31m-[m
[31m-Changes made via Lovable will be committed automatically to this repo.[m
[31m-[m
[31m-**Use your preferred IDE**[m
[31m-[m
[31m-If you want to work locally using your own IDE, you can clone this repo and push changes. Pushed changes will also be reflected in Lovable.[m
[31m-[m
[31m-The only requirement is having Node.js & npm installed - [install with nvm](https://github.com/nvm-sh/nvm#installing-and-updating)[m
[31m-[m
[31m-Follow these steps:[m
[31m-[m
[31m-```sh[m
[31m-# Step 1: Clone the repository using the project's Git URL.[m
[31m-git clone <YOUR_GIT_URL>[m
[31m-[m
[31m-# Step 2: Navigate to the project directory.[m
[31m-cd <YOUR_PROJECT_NAME>[m
[31m-[m
[31m-# Step 3: Install the necessary dependencies.[m
[31m-npm i[m
[31m-[m
[31m-# Step 4: Start the development server with auto-reloading and an instant preview.[m
[31m-npm run dev[m
[31m-```[m
[31m-[m
[31m-**Edit a file directly in GitHub**[m
[31m-[m
[31m-- Navigate to the desired file(s).[m
[31m-- Click the "Edit" button (pencil icon) at the top right of the file view.[m
[31m-- Make your changes and commit the changes.[m
[31m-[m
[31m-**Use GitHub Codespaces**[m
[31m-[m
[31m-- Navigate to the main page of your repository.[m
[31m-- Click on the "Code" button (green button) near the top right.[m
[31m-- Select the "Codespaces" tab.[m
[31m-- Click on "New codespace" to launch a new Codespace environment.[m
[31m-- Edit files directly within the Codespace and commit and push your changes once you're done.[m
[31m-[m
[31m-## What technologies are used for this project?[m
[31m-[m
[31m-This project is built with:[m
[31m-[m
[31m-- Vite[m
[31m-- TypeScript[m
[31m-- React[m
[31m-- shadcn-ui[m
[31m-- Tailwind CSS[m
[31m-[m
[31m-## How can I deploy this project?[m
[31m-[m
[31m-Simply open [Lovable](https://lovable.dev/projects/fd9f3424-0298-4930-96d6-270664224ee0) and click on Share -> Publish.[m
[31m-[m
[31m-## Can I connect a custom domain to my Lovable project?[m
[31m-[m
[31m-Yes it is![m
[31m-[m
[31m-To connect a domain, navigate to Project > Settings > Domains and click Connect Domain.[m
[31m-[m
[31m-Read more here: [Setting up a custom domain](https://docs.lovable.dev/tips-tricks/custom-domain#step-by-step-guide)[m
[32m+[m[32m# Solo Chess Master[m
[32m+[m
[32m+[m[32mA modern web-based chess application allowing you to play against a configurable AI opponent or challenge a friend in offline two-player mode. Built with React, TypeScript, Vite, and ShadCN UI.[m
[32m+[m
[32m+[m[32m![Gameplay Screenshot](public/screenshot.png)  <!-- Optional: Add a screenshot later -->[m
[32m+[m
[32m+[m[32m## Features[m
[32m+[m
[32m+[m[32m*   **Play Against AI**: Challenge an AI opponent with adjustable strength.[m
[32m+[m[32m*   **Configurable AI Strength**:[m
[32m+[m[32m    *   Select predefined difficulty levels (Beginner, Intermediate, Advanced, Expert).[m
[32m+[m[32m    *   Set a specific target Elo rating (400-2400) for the AI.[m
[32m+[m[32m*   **Two-Player Offline Mode**: Play against a friend on the same device.[m
[32m+[m[32m*   **Standard Chess Rules**: Includes castling, en passant, pawn promotion.[m
[32m+[m[32m*   **Game Controls**: Undo moves, restart the game, open settings.[m
[32m+[m[32m*   **Visual Aids**:[m
[32m+[m[32m    *   Highlights legal moves for the selected piece.[m
[32m+[m[32m    *   Indicates check status.[m
[32m+[m[32m    *   Highlights the last move made.[m
[32m+[m[32m*   **Move History**: View a list of all moves made in the current game.[m
[32m+[m[32m*   **Clean UI**: Built with ShadCN UI and Tailwind CSS for a modern look and feel.[m
[32m+[m
[32m+[m[32m## Tech Stack[m
[32m+[m
[32m+[m[32m*   **Framework**: React[m
[32m+[m[32m*   **Language**: TypeScript[m
[32m+[m[32m*   **Build Tool**: Vite[m
[32m+[m[32m*   **UI Components**: ShadCN UI[m
[32m+[m[32m*   **Styling**: Tailwind CSS[m
[32m+[m[32m*   **Chess Logic**: Custom chess engine and AI implementation[m
[32m+[m
[32m+[m[32m## Getting Started[m
[32m+[m
[32m+[m[32m### Prerequisites[m
[32m+[m
[32m+[m[32m*   Node.js (v18 or later recommended)[m
[32m+[m[32m*   npm (comes with Node.js)[m
[32m+[m
[32m+[m[32m### Installation & Running Locally[m
[32m+[m
[32m+[m[32m1.  **Clone the repository:**[m
[32m+[m[32m    ```bash[m
[32m+[m[32m    git clone https://github.com/Ncn914491/solo-chess-master.git[m
[32m+[m[32m    cd solo-chess-master[m
[32m+[m[32m    ```[m
[32m+[m
[32m+[m[32m2.  **Install dependencies:**[m
[32m+[m[32m    ```bash[m
[32m+[m[32m    npm install[m
[32m+[m[32m    ```[m
[32m+[m
[32m+[m[32m3.  **Run the development server:**[m
[32m+[m[32m    ```bash[m
[32m+[m[32m    npm run dev[m
[32m+[m[32m    ```[m
[32m+[m
[32m+[m[32m4.  Open your browser and navigate to `http://localhost:8080` (or the port specified in the console).[m
[32m+[m
[32m+[m[32m## How to Play[m
[32m+[m
[32m+[m[32m1.  **Select Game Mode**: Click the "Settings" button. Choose between "AI Opponent" and "Two Player".[m
[32m+[m[32m2.  **Configure AI (if AI Opponent selected)**: Use the "Target AI Elo" input to set the desired strength (400-2400). The internal difficulty level will adjust automatically.[m
[32m+[m[32m3.  **Start Playing**:[m
[32m+[m[32m    *   Click on one of your pieces to see its legal moves highlighted.[m
[32m+[m[32m    *   Click on a highlighted square to make the move.[m
[32m+[m[32m    *   In "AI Opponent" mode, the AI will automatically make its move after yours.[m
[32m+[m[32m    *   In "Two Player" mode, players take turns making moves.[m
[32m+[m[32m4.  **Use Controls**: Use the buttons below the board to "Undo" the last move(s), "Restart" the game, or access "Settings".[m
[32m+[m
[32m+[m[32m## AI Implementation Details[m
[32m+[m
[32m+[m[32mThe chess AI uses several standard techniques:[m
[32m+[m
[32m+[m[32m*   **Minimax Algorithm**: A core search algorithm to explore possible game states.[m
[32m+[m[32m*   **Alpha-Beta Pruning**: Optimizes the minimax search by cutting off branches that won't affect the final decision.[m
[32m+[m[32m*   **Quiescence Search**: Extends the search depth for "noisy" positions (captures, checks) to avoid the horizon effect and improve tactical accuracy.[m
[32m+[m[32m*   **Transposition Tables**: Stores previously evaluated positions (using Zobrist hashing) to avoid redundant calculations and speed up the search.[m
[32m+[m[32m*   **Move Ordering**: Prioritizes searching more promising moves (captures, TT best moves) first to enhance pruning efficiency.[m
[32m+[m[32m*   **Evaluation Function**: Evaluates board positions based on material balance, piece positional values, mobility, and king safety.[m
[32m+[m[32m*   **Difficulty Levels**:[m
[32m+[m[32m    *   **Beginner**: Random moves with a preference for captures.[m
[32m+[m[32m    *   **Intermediate**: Uses the basic evaluation function without deep search.[m
[32m+[m[32m    *   **Advanced**: Minimax search with a depth of 2.[m
[32m+[m[32m    *   **Expert**: Minimax search with a depth of 3 and iterative deepening.[m
[1mdiff --git a/src/pages/Index.tsx b/src/pages/Index.tsx[m
[1mindex 3433e66..a372ac2 100644[m
[1m--- a/src/pages/Index.tsx[m
[1m+++ b/src/pages/Index.tsx[m
[36m@@ -24,7 +24,6 @@[m [mimport { Label } from "@/components/ui/lab